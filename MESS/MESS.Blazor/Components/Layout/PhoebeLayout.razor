@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthProvider

<LayoutView Layout="typeof(MainLayout)">
    <AuthorizeView Roles="Technician, Administrator">

        <!-- Sticky Top Bar with Logout -->
        <div class="position-sticky top-0 d-flex align-items-center justify-content-end gap-2 px-2 py-1 custom-top-bar"
             style="z-index: 1040; min-height: 36px; background: transparent; padding: 0;">
            @if (!string.IsNullOrWhiteSpace(ActiveLineOperator))
            {
                <div class="d-flex align-items-center gap-1">
                    <span>@ActiveLineOperator</span>
                    <form method="post" action="/api/auth/logout">
                        <button type="submit" class="btn btn-danger btn-sm">
                            <i class="bi bi-box-arrow-right me-1"></i>Logout
                        </button>
                    </form>
                </div>
            }
        </div>

        <!-- Page Body -->
        <div class="mt-3 px-3">
            @Body
        </div>
    </AuthorizeView>
</LayoutView>

@code {
    /// <summary>
    /// Gets or sets the active line operator.
    /// </summary>
    private string? ActiveLineOperator { get; set; }

    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        var state = await AuthProvider.GetAuthenticationStateAsync();
        ActiveLineOperator = state.User.Identity?.Name;
    }
}