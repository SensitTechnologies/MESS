@page "/phoebe"
@using Microsoft.AspNetCore.Components.Authorization
@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthProvider

<div class="container-fluid p-0 m-0">
    <AuthorizeView Roles="Technician,Administrator">
        <LayoutView Layout="typeof(MainLayout)">

            <!-- ROW 2: MenuBarPhoebe with btn-outline-secondary style -->
            <div class="d-flex justify-content-between align-items-center px-3 py-2">
                <!-- Left-aligned action buttons -->
                <div class="d-flex gap-2">
                    <button type="button" class="btn btn-sm btn-outline-secondary">New</button>
                    <button type="button" class="btn btn-sm btn-outline-secondary">Edit</button>
                    <button type="button" class="btn btn-sm btn-outline-secondary">Delete</button>
                    <button type="button" class="btn btn-sm btn-outline-secondary">Hide</button>
                    <button type="button" class="btn btn-sm btn-outline-secondary">Download</button>
                    <button type="button" class="btn btn-sm btn-outline-secondary">QR</button>
                    <button type="button" class="btn btn-sm btn-outline-secondary">Version History</button>
                </div>

                <!-- Right-aligned Save button -->
                <div>
                    <button type="button" class="btn btn-sm btn-outline-success">
                        <i class="bi bi-save me-1"></i> Save
                    </button>
                </div>
            </div>

            <!-- ROW 3: Work Instructions, Users, Products, Logout -->
            <div class="d-flex justify-content-between align-items-center px-3 py-2">
                <div class="d-flex gap-2">
                    <NavLink class="btn btn-sm btn-outline-secondary" href="/WorkInstructionManager">Work Instructions</NavLink>
                    <NavLink class="btn btn-sm btn-outline-secondary" href="/users">Users</NavLink>
                    <NavLink class="btn btn-sm btn-outline-secondary" href="/products">Products</NavLink>
                </div>
                @if (!string.IsNullOrWhiteSpace(ActiveLineOperator))
                {
                    <div class="d-flex align-items-center gap-2">
                        <span>@ActiveLineOperator</span>
                        <form method="post" action="/api/auth/logout" class="m-0">
                            <button type="submit" class="btn btn-danger btn-sm">
                                <i class="bi bi-box-arrow-right me-1"></i> Logout
                            </button>
                        </form>
                    </div>
                }
            </div>

            <!-- BODY -->
            <div class="p-3">
                @Body
            </div>
        </LayoutView>
    </AuthorizeView>
</div>

@code {
    private string? ActiveLineOperator { get; set; }

    /// <summary>
    /// Called when the component is initialized; gets the authenticated user info.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        var state = await AuthProvider.GetAuthenticationStateAsync();
        ActiveLineOperator = state.User.Identity?.Name;
    }
}
