@page "/products"
@attribute [Authorize(Roles = "Technician")]
@using MESS.Data.Models
@using MESS.Services.Product
@using Microsoft.AspNetCore.Authorization
@inject IProductService ProductService
@inject NavigationManager NavigationManager

<PageTitle>Product List</PageTitle>

<h3>Product List</h3>

@if (Products.Count == 0)
{
    <p>Loading... No products currently available.</p>
}
else
{
    <table class="table table-striped">
        <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Version</th>
            <th>Active</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var product in Products)
        {
            <tr>
                <td>@product.Id </td>
                <td>
                    @product.Name
                    <ProductDetails Product="product" />
                </td>
                <td>@product.Version</td>
                <td>@(product.IsActive ? "Yes" : "No")</td>
                <td>
                    <button class="btn btn-primary btn-sm" @onclick="() => EditProduct(product.Id)">Edit</button>
                    <button class="btn btn-warning btn-sm" @onclick="() => RemoveProduct(product.Id)">Delete</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

<button class="btn btn-success" @onclick="GoToCreate">Create New Product</button>

@code {
    private List<Product> Products { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadProducts();
    }

    private async Task LoadProducts()
    {
        Products = (await ProductService.GetAllProductsAsync()).ToList();
    }

    private void GoToCreate()
    {
        NavigationManager.NavigateTo("/products/create");
    }

    private void EditProduct(int id)
    {
        NavigationManager.NavigateTo($"/products/edit/{id}");
    }

    private async Task RemoveProduct(int id)
    {
        await ProductService.RemoveProductAsync(id);
        await LoadProducts(); // Refresh the list after deletion
    }
}