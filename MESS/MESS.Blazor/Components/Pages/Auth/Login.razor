@page "/"
@using Azure.Core
@using MESS.Data.Models
@using MESS.Services.ApplicationUser
@using Microsoft.AspNetCore.Components.Authorization
@using Serilog
@inject NavigationManager Navigation
@inject IApplicationUserService ApplicationUserService
@inject AuthenticationStateProvider AuthStateProvider

<div class="d-flex justify-content-center align-items-center">
    <div class="card shadow" style="min-width: 350px; max-width: 450px;">
        <div class="card-header bg-primary text-white">
            <h3 class="m-0">Login</h3>
        </div>
        <div class="card-body p-4">
            <AuthorizeView>
                <Authorized>
                    <div class="text-center mb-3">
                        <p>You are logged in as: <strong>@context.User.Identity?.Name</strong></p>
                        <form method="post" action="/api/auth/logout">
                            <button type="submit" class="btn btn-danger">Logout</button>
                        </form>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <form method="post" action="/api/auth/login">
                        <AntiforgeryToken />
                        <div class="position-relative">
                            <label for="email" class="form-label">Email:</label>
                            <input type="text"
                                   id="email"
                                   name="email"
                                   class="form-control"
                                   @bind-value="SearchFilter"
                                   @bind-value:event="oninput"
                                   @onfocus="ShowDropdown"
                                   placeholder="Search or select an operator..." />

                            @if (IsDropdownVisible)
                            {
                            <div class="position-absolute w-100 mt-1 shadow bg-white border rounded"
                                 style="max-height: 200px; overflow-y: auto; z-index: 1000;">
                                @if (ApplicationUsers != null)
                                {
                                    @foreach (var lineOperator in ApplicationUsers.Where(u =>
                                        u.Email != null && (string.IsNullOrEmpty(SearchFilter) ||
                                                            u.FullName.Contains(SearchFilter, StringComparison.OrdinalIgnoreCase) ||
                                                            u.Email.Contains(SearchFilter, StringComparison.OrdinalIgnoreCase))))
                                    {
                                    <div class="dropdown-item py-2 px-3"
                                         @onclick="() => SelectOperator(lineOperator)"
                                         style="cursor: pointer;">
                                        <div>@lineOperator.FullName</div>
                                        <small class="text-muted">@lineOperator.Email</small>
                                    </div>
                                }
                                }
                            </div>
                            }
                        </div>
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">Login</button>
                        </div>
                    </form>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </div>
</div>

@code {
    private List<ApplicationUser>? ApplicationUsers { get; set; }
    private string SearchFilter { get; set; } = "";
    private bool IsDropdownVisible { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ApplicationUsers = await ApplicationUserService.GetApplicationUsers();
    }

    private void ShowDropdown()
    {
        IsDropdownVisible = true;
    }

    private void SelectOperator(ApplicationUser user)
    {
        if (user.Email != null) SearchFilter = user.Email;
        IsDropdownVisible = false;
    }

}