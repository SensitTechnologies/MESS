@page "/Register"
@using MESS.Data.DTO
@using MESS.Data.Models
@using MESS.Services.ApplicationUser
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using Serilog
@inject IApplicationUserService ApplicationUserService
@inject NavigationManager Navigation
@inject SignInManager<ApplicationUser> SignInManager

<div class="d-flex justify-content-center align-items-center">
    <div class="card shadow" style="min-width: 350px; max-width: 450px;">
        <div class="card-header bg-black text-white">
            <h3 class="m-0">Register</h3>
        </div>
        <div class="card-body p-4">
            <form @onsubmit="HandleRegistrationAsync">
                
                <div class="form-group mb-3">
                    <label>Username:</label>
                    <InputText @bind-Value="NewUser.Username" class="form-control" placeholder="Enter your username..." />
                </div>
                
                <div class="form-group mb-3">
                    <label>First Name:</label>
                    <InputText @bind-Value="FirstName" class="form-control" placeholder="Enter your first name..."/>
                </div>
                
                <div class="form-group mb-3">
                    <label>Last Name:</label>
                    <InputText @bind-Value="LastName" class="form-control" placeholder="Enter your last name..."/>
                </div>
                
                <div class="form-group mb-3">
                    <label>Email (optional):</label>
                    <InputText @bind-Value="NewUser.Email" class="form-control" placeholder="Enter your email (optional)..." />
                </div>
                
                <div class="form-group mb-3">
                    <label>Password:</label>
                    <InputText @bind-Value="NewUser.Password" type="password" class="form-control" placeholder="Enter your password..." />
                </div>
                
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary">Register</button>
                </div>
            </form>
            
            @if (ErrorMessages?.Count > 0)
            {
                <div class="mt-3">
                    @foreach (var error in ErrorMessages)
                    {
                        <p class="text-danger m-0">@error.Description</p>
                    }
                </div>
            }
        </div>
    </div>
</div>

@code {
    private string Username { get; set; } = "";
    private string FirstName { get; set; } = "";
    private string LastName { get; set; } = "";
    private string Email { get; set; } = "";
    private string Password { get; set; } = "";
    
    private UserRoleDto.RegisterRequest NewUser { get; set; } = new UserRoleDto.RegisterRequest();
    private List<IdentityError> ErrorMessages { get; set; } = new List<IdentityError>();

    
    
    private async Task HandleRegistrationAsync()
    {
        ErrorMessages.Clear();

        if (string.IsNullOrWhiteSpace(NewUser.Username))
        {
            ErrorMessages.Add(new IdentityError { Description = "Username is required." });
            return;
        }

        if (string.IsNullOrWhiteSpace(NewUser.Password))
        {
            ErrorMessages.Add(new IdentityError { Description = "Password is required." });
            return;
        }

        // Optional: Validate email if you want

        var result = await ApplicationUserService.RegisterUserAsync(NewUser);

        if (result.Succeeded)
        {
            Navigation.NavigateTo("/?message=Account created successfully, please log in");
        }
        else
        {
            ErrorMessages.AddRange(result.Errors);
        }
    }
}