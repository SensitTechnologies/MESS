@page "/Register"
@using MESS.Data.Models
@using MESS.Services.ApplicationUser
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using Serilog
@inject IApplicationUserService ApplicationUserService
@inject NavigationManager Navigation

<div class="d-flex justify-content-center align-items-center">
    <div class="card shadow" style="min-width: 350px; max-width: 450px;">
        <div class="card-header bg-black text-white">
            <h3 class="m-0">Register</h3>
        </div>
        <div class="card-body p-4">
            <form @onsubmit="HandleRegistrationAsync">
                <div clas="form-group mb-3">
                    <label>Email:</label>
                    <InputText @bind-Value="Email" class="form-control" placeholder="Enter your email..."/>
                </div>
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary">Register</button>
                </div>
            </form>
            
            @if (ErrorMessages?.Count > 0)
            {
                <div class="mt-3">
                    @foreach (var error in ErrorMessages)
                    {
                        <p class="text-danger m-0">@error.Description</p>
                    }
                </div>
            }
        </div>
    </div>
</div>

@if (ErrorMessages != null)
{
    <div>
        @foreach (var error in ErrorMessages)
        {
            <p>
                @error.Description
            </p>
        }
    </div>
}

@code {
    private string Email { get; set; } = "";
    private List<IdentityError> ErrorMessages { get; set; } = new List<IdentityError>();
    
    
    private async Task HandleRegistrationAsync()
    {
        ErrorMessages.Clear();

        var user = new ApplicationUser
        {
            Email = Email,
            UserName = Email.Split('@')[0],
        };

        var result = await ApplicationUserService.AddApplicationUser(user);

        if (result.Succeeded)
        {
            // Redirect to login page after successful registration
            Navigation.NavigateTo("/?message=Account%20created%20successfully%2C%20please%20log%20in");
        }
        else
        {
            Log.Warning("Unable to register new user with email: {Email}. Failed with the following errors: {errors}", 
                Email, result.Errors);
            ErrorMessages.AddRange(result.Errors);
        }
    }
}