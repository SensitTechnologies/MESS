@using MESS.Data.Models
@using MESS.Services.ProductionLog
@using Microsoft.AspNetCore.Components.Authorization
@inject IProductionLogEventService ProductionLogEventService

<div class="d-flex justify-content-between gap-4 flex-sm-wrap header-container">
    
    <ProductSelect Products="@Products" OnProductSelected="@OnProductSelected"/>
    <WorkInstructionSelect WorkInstructions="@WorkInstructions" OnWorkInstructionSelected="@OnWorkInstructionSelected"></WorkInstructionSelect>
    <AuthorizeView Roles="Technician">
        <NavLink class="btn btn-outline-secondary text-decoration-none" href="/Dashboard" Match="NavLinkMatch.All">
            Phoebe
        </NavLink>
    </AuthorizeView>
</div>

@if (!string.IsNullOrWhiteSpace(ActiveLineOperator))
{
    <div class="d-flex align-items-center justify-content-end">
        <span class="me-3">@ActiveLineOperator</span>
        <form method="post" action="/api/auth/logout">
            <button type="submit" class="btn btn-danger btn-sm">
                <i class="bi bi-box-arrow-right me-1"></i>Logout
            </button>
        </form>
    </div>
}
else
{
    <LineOperatorSelect LineOperators="@LineOperators" OnLineOperatorSelected="@OnLineOperatorSelected"/>
}

@code {
    [Parameter]
    public List<Product>? Products { get; set; }
    [Parameter]
    public EventCallback<int> OnProductSelected { get; set; }
    
    [Parameter]
    public List<WorkInstruction>? WorkInstructions { get; set; }
    [Parameter]
    public EventCallback<int> OnWorkInstructionSelected { get; set; }
    [Parameter]
    public List<ApplicationUser>? LineOperators { get; set; }
    [Parameter]
    public EventCallback<string> OnLineOperatorSelected { get; set; }
    [Parameter]
    public string? ActiveLineOperator { get; set; }
}