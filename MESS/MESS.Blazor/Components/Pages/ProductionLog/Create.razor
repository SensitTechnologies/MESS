@page "/production-log"
@attribute [Authorize(Roles = "Admin, Operator")]
@using MESS.Services.ApplicationUser
@using MESS.Services.BrowserCacheManager
@using MESS.Services.Product
@using MESS.Services.ProductionLog
@using MESS.Services.Serialization
@using MESS.Services.WorkInstruction
@using MESS.Services.SessionManager
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@inject IProductionLogService ProductionLogService
@inject IProductionLogEventService ProductionLogEventService
@inject IWorkInstructionService WorkInstructionService
@inject IProductService ProductService
@inject ILocalCacheManager LocalCacheManager
@inject ISessionManager SessionManager
@inject IApplicationUserService LineOperatorService
@inject AuthenticationStateProvider AuthProvider
@inject ISerializationService SerializationService
@inject IJSRuntime JSRuntime
@implements IAsyncDisposable

<PageTitle>@Title</PageTitle>
<ErrorBoundary>
    <ChildContent>
        <EditForm class="container" FormName="EditProductionLog" Model="ProductionLog" OnValidSubmit="HandleSubmit">
            <DataAnnotationsValidator/>
            <ValidationSummary/>
            <ConfirmationModal @ref="popupRef" OnSubmit="HandleConfirmation"/>
            
            <div class="mb-3">
                <div class="container ps-0 d-inline-flex justify-content-between gap-4 mb-2 flex-wrap">
                    <CreateHeader
                        WorkInstructions="@ActiveProduct?.WorkInstructions" OnWorkInstructionSelected="@SetActiveWorkInstruction"
                        ActiveLineOperator="@ActiveLineOperator"
                        Products="@Products" OnProductSelected="@SetActiveProduct" />
                    <div class="d-inline-flex gap-4 align-items-center flex-sm-wrap">
                        <div class="">
                            <p class="mb-0">
                                @if (@ProductionLogEventService.IsSaved)
                                {
                                    <span class="badge text-bg-success p-2">Saved</span>
                                }
                                else
                                {
                                    <span class="badge text-bg-danger p-2">Unsaved</span>
                                }
                            </p>
                        </div>
                    </div>
                </div>
                
                @if (ActiveWorkInstruction != null && ActiveProduct != null)
                {
                    <WorkInstructionStepList ActiveWorkInstruction="@ActiveWorkInstruction" ProductionLog="ProductionLog" OnStepCompleted="@(async (args) => await OnStepCompleted(args.Item1, args.Item2))"/>
                }

            </div>
            <div class="d-flex justify-content-center mt-4 gap-4">

                <div class="mb-4">
                    <button type="submit" class="btn btn-primary">Submit Log</button>
                </div>
                
            </div>
        </EditForm>
    </ChildContent>
    <ErrorContent Context="ex">
        <div class="alert alert-danger" role="alert">
            An error occurred: @ex.Message
        </div>
    </ErrorContent>
</ErrorBoundary>