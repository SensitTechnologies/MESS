@page "/production-log"
@using MESS.Services.BrowserCacheManager
@using MESS.Services.Product
@using MESS.Services.ProductionLog
@using MESS.Services.WorkInstruction
@using MESS.Services.SessionManager
@using MESS.Services.WorkStation
@inject IProductionLogService ProductionLogService
@inject IWorkInstructionService WorkInstructionService
@inject IProductService ProductService
@inject ILocalCacheManager LocalCacheManager
@inject IWorkStationService WorkStationService
@inject ISessionManager SessionManager

<PageTitle>@Title</PageTitle>
<ErrorBoundary>
    <ChildContent>
        <EditForm class="container" FormName="EditProductionLog" Model="ProductionLog" OnValidSubmit="HandleSubmit">
            <DataAnnotationsValidator/>
            <ValidationSummary/>
            <div class="mb-3">
                <div class="container ps-0 d-inline-flex justify-content-between gap-4 mb-2 flex-wrap">
                    @if (!IsWorkflowActive)
                    {
                        <WorkStationSelect WorkStations="@WorkStations" OnWorkStationSelected="@SetActiveWorkStation"/>
                        var stationProducts = LoadAssociatedProductsFromStation();
                        <ProductSelect Disabled="@(string.IsNullOrWhiteSpace(ActiveWorkStation))" Products="@stationProducts" OnProductSelected="@SetActiveProduct"/>
                    }
                    else
                    {
                        <CreateHeader ActiveProduct="@ActiveProduct" WorkStation="@ActiveWorkStation" />
                    }

                    <div class="d-inline-flex gap-4 align-items-center flex-sm-wrap">
                        <div class="">
                            <p class="mb-0">
                                @if (IsSaved)
                                {
                                    <span class="badge text-bg-success p-2">Saved</span>
                                }
                                else
                                {
                                    <span class="badge text-bg-danger p-2">Unsaved</span>
                                }
                            </p>
                        </div>

                        <div>
                            <button type="button" class="btn btn-warning" @onclick="HandleResetConfiguration">Reset Configuration</button>
                        </div>
                    </div>
                </div>
                
                @if (ActiveWorkInstruction != null && ActiveProduct != null)
                {
                    <WorkInstructionStepList ActiveWorkInstruction="@ActiveWorkInstruction" ProductionLog="ProductionLog" OnStepCompleted="@(async (args) => await OnStepCompleted(args.Item1, args.Item2))"/>
                }

            </div>
            <div class="d-flex justify-content-center mt-4 gap-4">

                <div class="mb-4">
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
                
            </div>
        </EditForm>
    </ChildContent>
    <ErrorContent Context="ex">
        <div class="alert alert-danger" role="alert">
            An error occurred: @ex.Message
        </div>
    </ErrorContent>
</ErrorBoundary>