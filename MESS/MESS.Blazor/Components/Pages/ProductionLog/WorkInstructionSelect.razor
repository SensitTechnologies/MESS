@using MESS.Data.Models
@using MESS.Services.ProductionLog
@inject IProductionLogEventService ProductionLogEventService

<div>
    @if (WorkInstructions != null)
    {
        <select id="workInstruction-select" class="form-select" @onchange="async e => await OnWorkInstructionSelected.InvokeAsync(int.Parse(e.Value?.ToString() ?? string.Empty))">
            <option value="-1">Select Instruction</option>

            @foreach (var workInstruction in WorkInstructions)
            {
                var selectedWorkInstructionName = ProductionLogEventService.CurrentWorkInstructionName;
                var isSelected = workInstruction.Title == selectedWorkInstructionName;
                <option selected="@isSelected" value="@workInstruction.Id">@workInstruction.Title</option>
            }
        </select>
    }
</div>


@code {
    [Parameter]
    public List<WorkInstruction>? WorkInstructions { get; set; }
    [Parameter]
    public EventCallback<int> OnWorkInstructionSelected { get; set; }
    
    protected override Task OnInitializedAsync()
    {
        ProductionLogEventService.WorkInstructionDetailsChanged += StateHasChanged;
        return base.OnInitializedAsync();
    }

    public void Dispose()
    {
        ProductionLogEventService.ProductDetailsChanged -= StateHasChanged;
    }
}