@using MESS.Data.Models
@using MESS.Services.ProductionLog
@inject IProductionLogEventService ProductionLogEventService
@implements IDisposable

<div>
    @if (Products != null)
    {
        <select disabled="@Disabled" id="product-select" class="form-select" @onchange="async e => await OnProductSelected.InvokeAsync(int.Parse(e.Value?.ToString() ?? string.Empty))">
            <option value="">Select Product</option>
            @foreach (var product in Products)
            {
                @if (product.WorkInstructions == null)
                {
                    continue;
                }
                var selectedProductName = ProductionLogEventService.CurrentProductName;
                var isSelected = product.Name == selectedProductName;
                <option selected="@isSelected" value="@product.Id">@product.Name</option>
            }
        </select>
    }
</div>

@code {
    [Parameter]
    public List<Product>? Products { get; set; }
    [Parameter]
    public EventCallback<int> OnProductSelected { get; set; }
    [Parameter]
    public bool Disabled { get; set; }

    protected override void OnInitialized()
    {
        ProductionLogEventService.ProductDetailsChanged += StateHasChanged;
    }

    public void Dispose()
    {
        ProductionLogEventService.ProductDetailsChanged -= StateHasChanged;
    }
}