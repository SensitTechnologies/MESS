@page "/lineoperators/addoperator"
@using MESS.Data.Models
@using MESS.Services
@rendermode InteractiveServer
@inject LineOperatorService LineOperatorService
@inject NavigationManager NavigationManager

<h3>Add Operator</h3>

<input type="text" @bind="NewLineOperator.FirstName" placeholder="First Name"/>
<input type="text" @bind="NewLineOperator.LastName" placeholder="Last Name"/>
<button @onclick="AddOperatorAsync">Add Operator</button>
<br/>
<button @onclick="LineOperatorNavigate">Back</button>

@code {
    private List<LineOperator> Operators = new();
    private LineOperator NewLineOperator = new()
    {
        FirstName = string.Empty,
        LastName = string.Empty,
        CreatedBy = "Admin",
        LastModifiedBy = "Admin",
        CreatedOn = DateTime.UtcNow,
        LastModifiedOn = DateTime.UtcNow
    };
    
    private async Task LoadOperators()
    {
        Operators = await LineOperatorService.GetLineOperators();
    }
    
    private async Task AddOperatorAsync()
    {
        if (!string.IsNullOrWhiteSpace(NewLineOperator.FirstName) && !string.IsNullOrWhiteSpace(NewLineOperator.LastName))
        {
            await LineOperatorService.AddLineOperator(NewLineOperator);
            
            NewLineOperator.FirstName = string.Empty;
            NewLineOperator.LastName = string.Empty;
            NewLineOperator.CreatedOn = DateTime.UtcNow;
            NewLineOperator.LastModifiedOn = DateTime.UtcNow;
            
            <p>Operator successfully added.</p>
            await LoadOperators();
        }
    }

    private void LineOperatorNavigate()
    {
        NavigationManager.NavigateTo("/lineoperators");
    }
   
}