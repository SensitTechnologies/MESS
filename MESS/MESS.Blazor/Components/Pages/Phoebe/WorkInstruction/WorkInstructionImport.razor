@using MESS.Data.DTO
@using MESS.Data.Models
@using MESS.Services.WorkInstruction
@inject IWorkInstructionService WorkInstructionService
@inject IToastService ToastService

<FluentCard Width="400" Class="m-0 w-100">
    <div class="d-flex align-items-center">
        <button @onclick="Import" class="btn btn-primary" disabled="@(IsImporting || Files.Count == 0)">
            Import File
        </button>
        <InputFile OnChange="LoadFiles" accept=".xlsx" class="form-control mb-3"/>
    </div>
</FluentCard>


@code {
    [Parameter]
    public EventCallback<WorkInstruction> OnImportComplete { get; set; }
    
    private List<IBrowserFile> Files { get; set; } = [];
    private bool IsImporting { get; set; }
    private string? StatusMessage { get; set; }
    private ImportStatus? FileStatus { get; set; }
    private bool ImportComplete { get; set; }
    
    private async Task Import()
    {
        IsImporting = true;
        ImportComplete = false;
        var importResult = await WorkInstructionService.ImportFromXlsx(Files);

        FileStatus = importResult.Status;
        if (importResult is { Status: ImportStatus.Error, ImportError: not null })
        {
            StatusMessage = importResult.ImportError.ToString();
            ToastService.ShowError(StatusMessage, 10000);
        }

        IsImporting = importResult is {Status: ImportStatus.Pending};

        if (importResult.Status == ImportStatus.Complete)
        {
            IsImporting = false;
            ImportComplete = true;
            if (importResult.WorkInstruction == null)
            {
                return;
            }
            await OnImportComplete.InvokeAsync(importResult.WorkInstruction);
            ToastService.ShowSuccess($"Successfully Imported WorkInstruction: {importResult.WorkInstruction.Title}. Version: {importResult.WorkInstruction.Version}", 3000);
        }
    }

    private void LoadFiles(InputFileChangeEventArgs obj)
    {
        Files.Add(obj.File);
    }

}