@using MESS.Data.Models

@if (Products?.Any(p => p.IsActive) == true)
{
    <select class="form-select" @bind="_selectedProductId">
        <option value="-1">All Products</option>
        @foreach (var product in Products.Where(p => p.IsActive).OrderBy(p => p.Name ?? string.Empty))
        {
            <option value="@product.Id">@product.Name</option>
        }
    </select>
}
else
{
    <p>No active products available.</p>
}

@code {
    private int _selectedProductIdBacking = -1;

    private int _selectedProductId
    {
        get => _selectedProductIdBacking;
        set
        {
            if (_selectedProductIdBacking != value)
            {
                _selectedProductIdBacking = value;
                _ = OnProductSelected.InvokeAsync(value);
            }
        }
    }

    /// <summary>
    /// The list of products to display in the dropdown.
    /// </summary>
    [Parameter]
    public List<Product>? Products { get; set; }

    /// <summary>
    /// Gets or sets the currently selected product ID.
    /// This is set by the parent component.
    /// </summary>
    [Parameter]
    public int? SelectedProductId { get; set; }

    /// <summary>
    /// Event callback triggered when the user selects a product.
    /// Passes the selected product ID to the parent component.
    /// </summary>
    [Parameter]
    public EventCallback<int> OnProductSelected { get; set; }

    /// <inheritdoc />
    protected override void OnParametersSet()
    {
        // Sync local field with parent
        _selectedProductId = SelectedProductId ?? -1;
    }
}