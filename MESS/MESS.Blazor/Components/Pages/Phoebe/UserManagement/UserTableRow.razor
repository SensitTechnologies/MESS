@using MESS.Data.DTO
@using MESS.Data.Models
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager

@if (User != null)
{
    <tr>
        <th scope="row">@RowNumber</th>
        <td>
            <input type="email" class="form-control" @bind="User.Email" @bind:event="oninput"/>
        </td>
        <td>
            <input type="text" class="form-control" @bind="User.FirstName" @bind:event="oninput"/>
        </td>
        <td>
            <input type="text" class="form-control" @bind="User.LastName" @bind:event="oninput"/>
        </td>
        <td>
            <div class="btn-group" role="group">
                <input type="checkbox" checked="@IsOperator" class="btn-check" id="operator" autocomplete="off">
                <label class="btn btn-outline-primary" for="operator">Operator</label>

                <input type="checkbox" checked="@IsTechnician" class="btn-check" id="technician" autocomplete="off">
                <label class="btn btn-outline-primary" for="technician">Technician</label>

                <input type="checkbox" checked="@IsAdmin" class="btn-check" id="administrator" autocomplete="off">
                <label class="btn btn-outline-primary" for="administrator">Administrator</label>
            </div>
        </td>
        <td>
        </td>
    </tr>
}

@code {
    [Parameter]
    public required int RowNumber { get; set; }
    [Parameter]
    public required UserRoleDto UserRoleDto { get; set; }
    private ApplicationUser? User { get; set; }
    private IList<string>? CurrentRoles { get; set; }
    
    private bool IsOperator { get; set; }
    private bool IsTechnician { get; set; }
    private bool IsAdmin { get; set; }

    protected override void OnInitialized()
    {
        User = UserRoleDto.User;
        CurrentRoles = UserRoleDto.Roles;

        if (CurrentRoles != null)
        {
            if (CurrentRoles.Contains("Administrator"))
            {
                IsAdmin = true;
            }
            
            if (CurrentRoles.Contains("Operator"))
            {
                IsOperator = true;
            }
            
            if (CurrentRoles.Contains("Technician"))
            {
                IsTechnician = true;
            }
        }
    }

    private async Task UpdateRoleAsync(string selectedRole)
    {
        try
        {
            if (User == null)
            {
                return;
            }

            var result = await UserManager.AddToRoleAsync(User, selectedRole);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }
    }

}