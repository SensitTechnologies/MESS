// <auto-generated />
using System;
using MESS.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MESS.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250401143640_productionlog-WorkinstructionId-nullable")]
    partial class productionlogWorkinstructionIdnullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MESS.Data.Models.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StepId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StepId");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("MESS.Data.Models.Problem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ProblemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("MESS.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MESS.Data.Models.ProductionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("OperatorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkInstructionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("WorkInstructionId");

                    b.ToTable("ProductionLogs");
                });

            modelBuilder.Entity("MESS.Data.Models.ProductionLogStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductionLogId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("SubmitTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool?>("Success")
                        .HasColumnType("bit");

                    b.Property<int>("WorkInstructionStepId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductionLogId");

                    b.HasIndex("WorkInstructionStepId");

                    b.ToTable("ProductionLogStep");
                });

            modelBuilder.Entity("MESS.Data.Models.SerialNumberLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("PartId")
                        .HasColumnType("int");

                    b.Property<string>("PartSerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductSerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductionLogId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("SubmitTimeQc")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.ToTable("SerialNumberLogs");
                });

            modelBuilder.Entity("MESS.Data.Models.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("SubmitTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("WorkInstructionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkInstructionId");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("MESS.Data.Models.WorkInstruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("LastModifiedOn")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("OperatorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkInstructions");
                });

            modelBuilder.Entity("ProblemProduct", b =>
                {
                    b.Property<int>("ProblemsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("ProblemsId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("ProblemProduct");
                });

            modelBuilder.Entity("ProductWorkInstruction", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("WorkInstructionsId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "WorkInstructionsId");

                    b.HasIndex("WorkInstructionsId");

                    b.ToTable("ProductWorkInstruction");
                });

            modelBuilder.Entity("MESS.Data.Models.Part", b =>
                {
                    b.HasOne("MESS.Data.Models.Step", null)
                        .WithMany("PartsNeeded")
                        .HasForeignKey("StepId");
                });

            modelBuilder.Entity("MESS.Data.Models.ProductionLog", b =>
                {
                    b.HasOne("MESS.Data.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("MESS.Data.Models.WorkInstruction", "WorkInstruction")
                        .WithMany()
                        .HasForeignKey("WorkInstructionId");

                    b.Navigation("Product");

                    b.Navigation("WorkInstruction");
                });

            modelBuilder.Entity("MESS.Data.Models.ProductionLogStep", b =>
                {
                    b.HasOne("MESS.Data.Models.ProductionLog", "ProductionLog")
                        .WithMany("LogSteps")
                        .HasForeignKey("ProductionLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MESS.Data.Models.Step", "WorkInstructionStep")
                        .WithMany()
                        .HasForeignKey("WorkInstructionStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductionLog");

                    b.Navigation("WorkInstructionStep");
                });

            modelBuilder.Entity("MESS.Data.Models.SerialNumberLog", b =>
                {
                    b.HasOne("MESS.Data.Models.Part", "Part")
                        .WithMany()
                        .HasForeignKey("PartId");

                    b.Navigation("Part");
                });

            modelBuilder.Entity("MESS.Data.Models.Step", b =>
                {
                    b.HasOne("MESS.Data.Models.WorkInstruction", null)
                        .WithMany("Steps")
                        .HasForeignKey("WorkInstructionId");
                });

            modelBuilder.Entity("ProblemProduct", b =>
                {
                    b.HasOne("MESS.Data.Models.Problem", null)
                        .WithMany()
                        .HasForeignKey("ProblemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MESS.Data.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductWorkInstruction", b =>
                {
                    b.HasOne("MESS.Data.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MESS.Data.Models.WorkInstruction", null)
                        .WithMany()
                        .HasForeignKey("WorkInstructionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MESS.Data.Models.ProductionLog", b =>
                {
                    b.Navigation("LogSteps");
                });

            modelBuilder.Entity("MESS.Data.Models.Step", b =>
                {
                    b.Navigation("PartsNeeded");
                });

            modelBuilder.Entity("MESS.Data.Models.WorkInstruction", b =>
                {
                    b.Navigation("Steps");
                });
#pragma warning restore 612, 618
        }
    }
}
